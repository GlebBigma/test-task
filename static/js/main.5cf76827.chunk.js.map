{"version":3,"sources":["assets/images/logo.svg","assets/images/img_pic.svg","serviceWorker.js","components/ui/ButtonBurger/ButtonBurger.js","components/Sidebar/SidebarItem.js","components/ui/icons/IconUser.js","components/ui/icons/IconPlay.js","components/ui/icons/IconBarChart.js","components/ui/icons/IconEnvelope.js","components/ui/icons/IconChat.js","components/ui/icons/IconHelp.js","components/ui/icons/IconSettings.js","components/Sidebar/Sidebar.js","containers/Home/Home.js","components/TechWork/TechWork.js","containers/Users.js","containers/Sessions.js","containers/Analytics.js","containers/Messages.js","containers/Chats.js","containers/HelpCenter.js","containers/Settings.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","ButtonBurger","isMobileMenu","onClick","className","defaultProps","SidebarItem","href","label","icon","info","to","IconUser","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","IconPlay","id","masktype","maskUnits","x","y","mask","IconBarChart","rx","IconEnvelope","IconChat","IconHelp","IconSettings","Sidebar","useState","toggleMobileMenu","handleMobileMenu","src","logo","alt","style","backgroundImage","Home","TechWork","emptyPicture","Users","Sessions","Analytics","Messages","Chats","HelpCenter","Settings","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5cf76827.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1876dfc7.svg\";","module.exports = __webpack_public_path__ + \"static/media/img_pic.9ebeb518.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './ButtonBurger.sass';\n\nconst ButtonBurger = ({isMobileMenu, onClick}) => {\n  return (\n    <div className={isMobileMenu ? 'button-burger active' : 'button-burger'}\n         onClick={() => onClick()}\n    >\n      <div/>\n      <div/>\n      <div/>\n    </div>\n  )\n};\n\nButtonBurger.propTypes = {\n  isMobileMenu: PropTypes.bool.isRequired,\n  onClick: PropTypes.func\n};\n\nButtonBurger.defaultProps = {\n  onClick: () => {\n  }\n};\n\nexport default ButtonBurger;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\n\nconst SidebarItem = ({href, label, icon, info, onClick}) => {\n  return (\n    <NavLink to={href}\n             className=\"sidebar__item\"\n             onClick={() => onClick()}\n    >\n      <div>\n        {icon}\n        {label}\n      </div>\n      {\n        info && <div className=\"sidebar__item__info\">\n          {info}\n        </div>\n      }\n    </NavLink>\n  )\n};\n\nSidebarItem.propTypes = {\n  href: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.object,\n  info: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nSidebarItem.defaultProps = {\n  icon: {},\n  info: '',\n  onClick: () => {\n  }\n};\n\nexport default SidebarItem;\n","import React from 'react';\n\nconst IconUser = () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"20\" height=\"20\" fill=\"white\"/>\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n            d=\"M6.56372 5.17968C6.56372 3.42386 8.07383 2 9.93601 2C11.7982 2 13.3083 3.42386 13.3083 5.17968C13.3083 6.9355 11.7982 8.9953 9.93601 8.9953C8.07383 8.9953 6.56372 6.9355 6.56372 5.17968Z\"\n            stroke=\"#5A6885\" strokeWidth=\"1.3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n      <path\n        d=\"M3.86634 17.762C3.57729 15.9905 4.29997 12.0386 10.3701 12.0386C14.519 12.0386 15.819 14.3782 16.0289 16.3626C16.1175 17.2003 15.4581 17.8798 14.624 17.9971C13.02 18.2226 10.6859 18.4123 8.63575 18.1708\"\n        stroke=\"#5A6885\" strokeWidth=\"1.3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </svg>\n  )\n};\n\nexport default IconUser;\n","import React from 'react';\n\nconst IconPlay = () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <mask id=\"mask0\" masktype=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"20\" height=\"20\">\n        <rect width=\"20\" height=\"20\" fill=\"white\"/>\n      </mask>\n      <g mask=\"url(#mask0)\">\n        <rect width=\"20\" height=\"20\" fill=\"white\"/>\n        <path\n          d=\"M15.1379 8.05714L15.5801 8.30573C17.1116 9.16683 17.1511 11.3577 15.6516 12.2735L6.49877 17.8633C4.96614 18.7993 3 17.6962 3 15.9004V5.02872C3 3.24825 4.93604 2.14296 6.46927 3.04811L11.2759 5.88571\"\n          stroke=\"#5A6885\" strokeWidth=\"1.3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n      </g>\n    </svg>\n  )\n};\n\nexport default IconPlay;\n","import React from 'react';\n\nconst IconBarChart = () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"20\" height=\"20\" fill=\"#2361FF\"/>\n      <rect width=\"20\" height=\"20\" fill=\"white\"/>\n      <path\n        d=\"M11.6 13.7647V17C11.6 17.5523 11.1523 18 10.6 18H9.39998C8.84769 18 8.39998 17.5523 8.39998 17V3C8.39998 2.44772 8.84769 2 9.39998 2H10.6C11.1523 2 11.6 2.44772 11.6 3V9.52941\"\n        stroke=\"#5A6885\" strokeWidth=\"1.3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n      <rect x=\"14.8\" y=\"5.76465\" width=\"3.2\" height=\"12.2353\" rx=\"1\" stroke=\"#5A6885\" strokeWidth=\"1.3\"\n            strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n      <rect x=\"2\" y=\"9.52942\" width=\"3.2\" height=\"8.47059\" rx=\"1\" stroke=\"#5A6885\" strokeWidth=\"1.3\"\n            strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </svg>\n  )\n};\n\nexport default IconBarChart;\n","import React from 'react';\n\nconst IconEnvelope = () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"20\" height=\"20\" fill=\"white\"/>\n      <path\n        d=\"M15 16L16 16C17.1046 16 18 15.1046 18 14L18 6C18 4.89543 17.1046 4 16 4L4 4C2.89543 4 2 4.89543 2 6L2 14C2 15.1046 2.89543 16 4 16L10 16\"\n        stroke=\"#5A6885\" strokeWidth=\"1.3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n      <path\n        d=\"M17.7417 5.5625L14.6393 7.6505L11.5368 9.7385C11.0962 10.0351 10.5559 10.1959 10 10.1959C9.44413 10.1959 8.90385 10.0351 8.46325 9.7385L2.2583 5.5625\"\n        stroke=\"#5A6885\" strokeWidth=\"1.3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </svg>\n  )\n};\n\nexport default IconEnvelope;\n","import React from 'react';\n\nconst IconChat = () => {\n  return (\n    <svg width=\"18\" height=\"17\" viewBox=\"0 0 18 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M17 6.80851L17 3C17 1.89543 16.1046 1 15 1L3 1C1.89543 1 0.999999 1.89543 0.999999 3L1 11.6383C1 12.7429 1.89543 13.6383 3 13.6383L12.0071 13.6383C12.3308 13.6383 12.6498 13.7169 12.9365 13.8674L17 16L17 13.6383L17 10.383\"\n        stroke=\"#5A6885\" strokeWidth=\"1.3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </svg>\n  )\n};\n\nexport default IconChat;\n","import React from 'react';\n\nconst IconHelp = () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <mask id=\"mask0\" masktype=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"20\" height=\"20\">\n        <rect width=\"20\" height=\"20\" fill=\"white\"/>\n      </mask>\n      <g mask=\"url(#mask0)\">\n        <rect width=\"20\" height=\"20\" fill=\"white\"/>\n        <path\n          d=\"M15.5517 3.86101C17.9208 6.23009 18.4479 9.74362 17.1331 12.622C16.7568 13.4457 19.0034 16.5028 18.3254 17.1808C17.6944 17.8118 14.2085 16.0268 13.4488 16.3964C10.5397 17.8119 6.93333 17.3116 4.51723 14.8955C1.47015 11.8484 1.47015 6.90809 4.51723 3.861C7.56431 0.813923 12.5046 0.813923 15.5517 3.86101Z\"\n          stroke=\"#5A6885\" strokeWidth=\"1.4\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n        <path\n          d=\"M10 11.2994C9.86739 11.2994 9.74021 11.2468 9.64645 11.153C9.55268 11.0592 9.5 10.9321 9.5 10.7994V10.6288C9.5 10.3185 9.59616 10.0159 9.77525 9.76257C9.95433 9.50923 10.2075 9.31762 10.5 9.21411C10.7922 9.11039 11.0452 8.91882 11.2242 8.66566C11.4032 8.41251 11.4996 8.11017 11.5 7.80011C11.5 7.40011 11.344 7.02344 11.06 6.74011C10.9213 6.60022 10.7561 6.48928 10.5741 6.41375C10.3922 6.33822 10.197 6.29959 10 6.30011C9.59933 6.30011 9.22267 6.45611 8.93933 6.73944C8.79956 6.87823 8.68875 7.04341 8.61333 7.22537C8.53791 7.40734 8.49939 7.60247 8.5 7.79944C8.5 7.93205 8.44732 8.05923 8.35355 8.153C8.25978 8.24676 8.13261 8.29944 8 8.29944C7.86739 8.29944 7.74022 8.24676 7.64645 8.153C7.55268 8.05923 7.5 7.93205 7.5 7.79944C7.50088 7.13673 7.76458 6.50143 8.23325 6.03289C8.70192 5.56434 9.33729 5.30082 10 5.30011C10.668 5.30011 11.296 5.56011 11.768 6.03278C12.0008 6.26449 12.1853 6.54004 12.311 6.8435C12.4366 7.14697 12.5009 7.47233 12.5 7.80078C12.4993 8.31756 12.3388 8.82149 12.0404 9.24342C11.742 9.66536 11.3204 9.98463 10.8333 10.1574C10.7359 10.1921 10.6515 10.2561 10.5918 10.3406C10.5321 10.4251 10.5001 10.526 10.5 10.6294V10.8001C10.4998 10.9326 10.4471 11.0596 10.3533 11.1532C10.2596 11.2469 10.1325 11.2994 10 11.2994Z\"\n          fill=\"#5A6885\" stroke=\"#5A6885\" strokeWidth=\"0.3\"/>\n        <path\n          d=\"M10 13.7991C10.4142 13.7991 10.75 13.4633 10.75 13.0491C10.75 12.6349 10.4142 12.2991 10 12.2991C9.58579 12.2991 9.25 12.6349 9.25 13.0491C9.25 13.4633 9.58579 13.7991 10 13.7991Z\"\n          fill=\"#5A6885\" stroke=\"#5A6885\" strokeWidth=\"0.3\"/>\n      </g>\n    </svg>\n  )\n};\n\nexport default IconHelp;\n","import React from 'react';\n\nconst IconSettings = () => {\n  return (\n    <svg width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M12.23 7.53946V0.771484\" stroke=\"#5A6885\" strokeWidth=\"1.3\" strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"/>\n      <path d=\"M12.23 15.9994V12.6154\" stroke=\"#5A6885\" strokeWidth=\"1.3\" strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"/>\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n            d=\"M14.768 10.0774C14.768 10.5794 14.6191 11.0701 14.3403 11.4874C14.0614 11.9048 13.665 12.2301 13.2013 12.4222C12.7375 12.6143 12.2272 12.6646 11.7349 12.5666C11.2425 12.4687 10.7903 12.227 10.4354 11.872C10.0804 11.5171 9.83871 11.0649 9.74078 10.5726C9.64286 10.0802 9.69312 9.56993 9.88521 9.10617C10.0773 8.64241 10.4026 8.24603 10.82 7.96716C11.2373 7.68828 11.728 7.53943 12.23 7.53943C12.9031 7.53943 13.5487 7.80682 14.0246 8.28279C14.5006 8.75875 14.768 9.4043 14.768 10.0774Z\"\n            stroke=\"#5A6885\" strokeWidth=\"1.3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n      <path d=\"M3.77002 9.63464V15.9997\" stroke=\"#5A6885\" strokeWidth=\"1.3\" strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"/>\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n            d=\"M6.30804 3.30948C6.30804 2.80751 6.15919 2.31681 5.88031 1.89944C5.60143 1.48207 5.20505 1.15677 4.74129 0.964678C4.27754 0.772584 3.76723 0.722323 3.27491 0.820252C2.78259 0.918181 2.33036 1.1599 1.97542 1.51485C1.62047 1.86979 1.37875 2.32202 1.28082 2.81434C1.18289 3.30666 1.23316 3.81696 1.42525 4.28072C1.61734 4.74448 1.94265 5.14086 2.36002 5.41974C2.77739 5.69862 3.26808 5.84747 3.77005 5.84747C4.44316 5.84747 5.08871 5.58007 5.56468 5.10411C6.04064 4.62814 6.30804 3.98259 6.30804 3.30948V3.30948Z\"\n            stroke=\"#5A6885\" strokeWidth=\"1.3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </svg>\n\n  )\n};\n\nexport default IconSettings;\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport logo from '../../assets/images/logo.svg';\nimport ButtonBurger from '../ui/ButtonBurger/ButtonBurger';\nimport SidebarItem from './SidebarItem';\nimport IconUser from '../ui/icons/IconUser';\nimport IconPlay from '../ui/icons/IconPlay';\nimport IconBarChart from '../ui/icons/IconBarChart';\nimport IconEnvelope from '../ui/icons/IconEnvelope';\nimport IconChat from '../ui/icons/IconChat';\nimport IconHelp from '../ui/icons/IconHelp';\nimport IconSettings from '../ui/icons/IconSettings';\n\nimport './Sidebar.sass';\n\nconst Sidebar = () => {\n  const [isMobileMenu, toggleMobileMenu] = useState(false);\n\n  const handleMobileMenu = () => toggleMobileMenu(!isMobileMenu);\n\n  return (\n    <div className={isMobileMenu ? 'sidebar active' : 'sidebar'}>\n      <div>\n        <div className=\"sidebar__header\">\n          <Link to={'/home'}>\n            <img src={logo} alt=\"Logo\"/>\n          </Link>\n          <ButtonBurger isMobileMenu={isMobileMenu}\n                        onClick={handleMobileMenu}\n          />\n        </div>\n        <SidebarItem href={'/users'}\n                     label={'Users'}\n                     icon={<IconUser/>}\n                     onClick={handleMobileMenu}\n        />\n        <SidebarItem href={'/sessions'}\n                     label={'Sessions'}\n                     icon={<IconPlay/>}\n                     info={'85'}\n                     onClick={handleMobileMenu}\n        />\n        <SidebarItem href={'/analytics'}\n                     label={'Analytics'}\n                     icon={<IconBarChart/>}\n                     info={'Soon'}\n                     onClick={handleMobileMenu}\n        />\n        <SidebarItem href={'/messages'}\n                     label={'Messages'}\n                     icon={<IconEnvelope/>}\n                     onClick={handleMobileMenu}\n        />\n        <SidebarItem href={'/chats'}\n                     label={'Chats'}\n                     icon={<IconChat/>}\n                     onClick={handleMobileMenu}\n        />\n        <SidebarItem href={'/help'}\n                     label={'Help center'}\n                     icon={<IconHelp/>}\n                     onClick={handleMobileMenu}\n        />\n        <SidebarItem href={'/settings'}\n                     label={'Settings'}\n                     icon={<IconSettings/>}\n                     onClick={handleMobileMenu}\n        />\n      </div>\n      <div className=\"sidebar__user-info\">\n        <div className=\"sidebar__user-info__photo\"\n             style={{backgroundImage: `url('')`}}\n        />\n        <div>\n          <div className=\"sidebar__user-info__first-name\">Peterson</div>\n          <div className=\"sidebar__user-info__last-name\">Jacksonmom</div>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default Sidebar;\n","import React from 'react';\n\nimport './Home.sass';\n\nconst Home = () => {\n  return (\n    <div className=\"container home\">\n      <h1>Gleb Bigma</h1>\n      <h2>Front-end developer</h2>\n      Test task\n    </div>\n  )\n};\n\nexport default Home;\n","import React from 'react';\nimport emptyPicture from '../../assets/images/img_pic.svg';\n\nimport './TechWork.sass';\n\nconst TechWork = () => {\n  return (\n    <div className=\"tech-work\">\n      <img src={emptyPicture} alt=\"Empty\"/>\n      <b>We're working on this page now!</b>\n      You will definitely know when it will be ready\n    </div>\n  )\n};\n\nexport default TechWork;\n","import React from 'react';\nimport TechWork from '../components/TechWork/TechWork';\n\nconst Users = () => {\n  return (\n    <div className=\"container users\">\n      <TechWork/>\n    </div>\n  )\n};\n\nexport default Users;\n","import React from 'react';\nimport TechWork from '../components/TechWork/TechWork';\n\nconst Sessions = () => {\n  return (\n    <div className=\"container sessions\">\n      <TechWork/>\n    </div>\n  )\n};\n\nexport default Sessions;\n","import React from 'react';\nimport TechWork from '../components/TechWork/TechWork';\n\nconst Analytics = () => {\n  return (\n    <div className=\"container analytics\">\n      <TechWork/>\n    </div>\n  )\n};\n\nexport default Analytics;\n","import React from 'react';\nimport TechWork from '../components/TechWork/TechWork';\n\nconst Messages = () => {\n  return (\n    <div className=\"container messages\">\n      <TechWork/>\n    </div>\n  )\n};\n\nexport default Messages;\n","import React from 'react';\nimport TechWork from '../components/TechWork/TechWork';\n\nconst Chats = () => {\n  return (\n    <div className=\"container chats\">\n      <TechWork/>\n    </div>\n  )\n};\n\nexport default Chats;\n","import React from 'react';\nimport TechWork from '../components/TechWork/TechWork';\n\nconst HelpCenter = () => {\n  return (\n    <div className=\"container help\">\n      <TechWork/>\n    </div>\n  )\n};\n\nexport default HelpCenter;\n","import React from 'react';\nimport TechWork from '../components/TechWork/TechWork';\n\nconst Settings = () => {\n  return (\n    <div className=\"container settings\">\n      <TechWork/>\n    </div>\n  )\n};\n\nexport default Settings;\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\nimport './styles/App.sass';\n\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Home from './containers/Home/Home';\nimport Users from './containers/Users';\nimport Sessions from './containers/Sessions';\nimport Analytics from './containers/Analytics';\nimport Messages from './containers/Messages';\nimport Chats from './containers/Chats';\nimport HelpCenter from './containers/HelpCenter';\nimport Settings from './containers/Settings';\n\nfunction App() {\n  return (\n    <div className=\"app-wrapper\">\n      <Sidebar/>\n      <Switch>\n        <Route path=\"/home\" component={Home} exact/>\n        <Route path=\"/users\" component={Users}/>\n        <Route path=\"/sessions\" component={Sessions}/>\n        <Route path=\"/analytics\" component={Analytics}/>\n        <Route path=\"/messages\" component={Messages}/>\n        <Route path=\"/chats\" component={Chats}/>\n        <Route path=\"/help\" component={HelpCenter}/>\n        <Route path=\"/settings\" component={Settings}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}